open file
===========
file = open('file_name', mode='r') // mode = 'w' or 'r'
file.read()
file.close

=== don't need to close file if open file in following way ===
with open('fine_name', 'r') as file:
	file.readLine()

=========================
Import flat file in NumPy
=========================
import numpy as np
data = np.loadtxt('file_name', delimiter=',') // default delimiter is any whitespace
data

=================
to skip row 
=================
data = np.loadtxt('file_name', delimiter=',', skiprows=1)

================
select row n col
================
data = np.loadtxt('file_name', delimiter=',', usecols=[0,2])

===============
seletting different datatypes
===============
data = np.loadtxt('file_name', delimiter=',', dtype=str)

=======================================================
data = np.genfromtxt('titanic.csv', delimiter=',', names=True, dtype=None)
Here, the first argument is the filename, the second specifies the delimiter , and the third argument names tells us there is a header. Because the data are of different types, data is an object called a structured array. Because numpy arrays have to contain elements that are all the same type, the structured array solves this by being a 1D array, where each element of the array is a row of the flat file imported. You can test this by checking out the array's shape in the shell by executing np.shape(data).

Acccessing rows and columns of structured arrays is super-intuitive: to get the ith row, merely execute data[i] and to get the column with name 'Fare', execute data['Fare'].

============================
There is also another function np.recfromcsv() that behaves similarly to np.genfromtxt(), except that its default dtype is None
Import titanic.csv using the function np.recfromcsv() and assign it to the variable, d. You'll only need to pass file to it because it has the defaults delimiter=',' and names=True in addition to dtype=None!

=================================
Using NumPy
=================================
# Assign the filename: file
file = 'digits.csv'

# Read the first 5 rows of the file into a DataFrame: data
data = pd.read_csv(file, nrows=5, header=None)

# Build a numpy array from the DataFrame: data_array
data_array = data.values

# Print the datatype of data_array to the shell
print(type(data_array))
=============================================
sep (the pandas version of delim), comment and na_values arguments of pd.read_csv(). comment takes characters that comments occur after in the file, which in this case is '#'. na_values takes a list of strings to recognize as NA/NaN, in this case the string 'Nothing'.
Execute the rest of the code to print the head of the resulting DataFrame and plot the histogram of the 'Age' of passengers aboard the Titanic.

# Import matplotlib.pyplot as plt
import matplotlib.pyplot as plt

# Assign filename: file
file = 'titanic_corrupt.txt'

# Import file: data
data = pd.read_csv(file, sep='\t', comment='#', na_values='Nothing')

# Print the head of the DataFrame
print(data.head())

# Plot 'Age' variable in a histogram
pd.DataFrame.hist(data[['Age']])
plt.xlabel('Age (years)')
plt.ylabel('count')
plt.show()
